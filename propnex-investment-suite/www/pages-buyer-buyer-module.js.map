{"version":3,"sources":["./src/app/pages/buyer/buyer.page.html","./src/app/pages/buyer/buyer-routing.module.ts","./src/app/pages/buyer/buyer.module.ts","./src/app/pages/buyer/buyer.page.scss","./src/app/pages/buyer/buyer.page.ts","./src/app/services/TrackHotel.service.ts"],"names":[],"mappings":"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","file":"pages-buyer-buyer-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n  \\n      <ion-title>Buyer Interface</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-content>\\n    <ion-grid>\\n    <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item>\\n            <ion-label>Filter by Accommodation Type</ion-label>\\n            <ion-select placeholder=\\\"Select Type\\\" [(ngModel)]=\\\"selectedAccommodationType\\\" (ionChange)=\\\"handleAccommodationTypeChange($event.detail.value)\\\" multiple>\\n              <ion-select-option value=\\\"\\\">All Types</ion-select-option>\\n              <ion-select-option *ngFor=\\\"let type of accommodationTypes\\\" [value]=\\\"type\\\">{{ type }}</ion-select-option>\\n            </ion-select>            \\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      \\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <!-- Accommodation type filter buttons -->\\n          <ion-button (click)=\\\"toggleAccommodationType('Residential')\\\">Residential</ion-button>\\n          <ion-button (click)=\\\"toggleAccommodationType('Backpackers Hotel')\\\">Backpackers' Hotel</ion-button>\\n          <ion-button (click)=\\\"toggleAccommodationType('Students Hotel')\\\">Students' Hotel</ion-button>\\n          <ion-button (click)=\\\"toggleAccommodationType('Hotel')\\\">Hotel</ion-button>\\n          <ion-button (click)=\\\"toggleAccommodationType('Serviced Apartment')\\\">Serviced Apartment</ion-button>\\n          <ion-button (click)=\\\"toggleAccommodationType('Workers Dormitories')\\\">Workers' Dormitories</ion-button>\\n                  <!-- Add more buttons as needed -->\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item>\\n            <ion-label>Selected Accommodation Type: </ion-label>\\n            <ion-note>{{ selectedAccommodationType.join(', ') || 'None' }}</ion-note>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item>\\n            <ion-label>Filter by Region</ion-label>\\n            <ion-select placeholder=\\\"Select Region\\\" [(ngModel)]=\\\"selectedRegion\\\" (ionChange)=\\\"handleRegionChange($event.detail.value)\\\"multiple>\\n              <ion-select-option value=\\\"\\\">All Types</ion-select-option>\\n              <ion-select-option *ngFor=\\\"let type of regionTypes\\\" [value]=\\\"type\\\">{{ type }}</ion-select-option>\\n            </ion-select>            \\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <!-- Tenure type filter buttons -->\\n          <ion-button (click)=\\\"setRegion('OCR')\\\">OCR</ion-button>\\n          <ion-button (click)=\\\"setRegion('CCR')\\\">CCR</ion-button>\\n          <ion-button (click)=\\\"setRegion('RCR')\\\">RCR</ion-button>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item >\\n            <ion-label>Filter by District</ion-label>\\n            <ion-select placeholder=\\\"Select Type\\\" [(ngModel)]=\\\"selectedDistrict\\\" (ionChange)=\\\"handleDistrictChange($event.detail.value)\\\" multiple>\\n              <ion-select-option value=\\\"\\\">All Types</ion-select-option>\\n              <ion-select-option *ngFor=\\\"let type of districtTypes\\\" [value]=\\\"type\\\">{{ type }}</ion-select-option>\\n            </ion-select>            \\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label>Min Budget</ion-label>\\n            <ion-input type=\\\"number\\\" [(ngModel)]=\\\"minPrice\\\" (ionChange)=\\\"handlePriceChange()\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      \\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label>Max Budget</ion-label>\\n            <ion-input type=\\\"number\\\" [(ngModel)]=\\\"maxPrice\\\" (ionChange)=\\\"handlePriceChange()\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <!-- Other filters -->\\n      \\n          <!-- Budget filter buttons -->\\n          <ion-button (click)=\\\"toggleBudgetRange({ min: 0, max: 1000000 })\\\" [class.selected]=\\\"isBudgetRangeSelected({ min: 0, max: 1000000 })\\\">0-1mil</ion-button>\\n          <ion-button (click)=\\\"toggleBudgetRange({ min: 1000001, max: 5000000 })\\\" [class.selected]=\\\"isBudgetRangeSelected({ min: 1000001, max: 5000000 })\\\">1mil-5mil</ion-button>\\n          <ion-button (click)=\\\"toggleBudgetRange({ min: 5000001, max: 10000000 })\\\" [class.selected]=\\\"isBudgetRangeSelected({ min: 5000001, max: 10000000 })\\\">5mil-10mil</ion-button>\\n          <ion-button (click)=\\\"toggleBudgetRange({ min: 10000001, max: 30000001 })\\\" [class.selected]=\\\"isBudgetRangeSelected({ min: 10000001, max: 30000001 })\\\">10mil-30mil</ion-button>\\n          <ion-button (click)=\\\"toggleBudgetRange({ min: 30000001, max: 50000000 })\\\" [class.selected]=\\\"isBudgetRangeSelected({ min: 30000001, max: 50000000 })\\\">30mil-50mil</ion-button>\\n          <ion-button (click)=\\\"toggleBudgetRange({ min: 50000001, max: 99999999999 })\\\" [class.selected]=\\\"isBudgetRangeSelected({ min: 50000001, max: 99999999999 })\\\">>50mil</ion-button>\\n          <!-- Add more buttons as needed -->\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item>\\n            <ion-label>Selected Budget Ranges:</ion-label>\\n            <ion-note>{{ getSelectedBudgetRanges() || 'None' }}</ion-note>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label>Min Number of Rooms</ion-label>\\n            <ion-input type=\\\"number\\\" [(ngModel)]=\\\"minRooms\\\" (ionChange)=\\\"handleRoomChange()\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      \\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label>Max Number of Rooms</ion-label>\\n            <ion-input type=\\\"number\\\" [(ngModel)]=\\\"maxRooms\\\" (ionChange)=\\\"handleRoomChange()\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <!-- Other filters -->\\n      \\n          <!-- Budget filter buttons -->\\n          <ion-button (click)=\\\"setRoomRange(0, 10)\\\">0-10</ion-button>\\n          <ion-button (click)=\\\"setRoomRange(11, 30)\\\">11-30</ion-button>\\n          <ion-button (click)=\\\"setRoomRange(31, 40)\\\">31-40</ion-button>\\n          <ion-button (click)=\\\"setRoomRange(41, 60)\\\">41-60</ion-button>\\n          <!-- Add more buttons as needed -->\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item>\\n            <ion-label>Filter by Tenure</ion-label>\\n            <ion-select placeholder=\\\"Select Tenure\\\" [(ngModel)]=\\\"selectedTenure\\\" (ionChange)=\\\"handleTenureChange($event.detail.value)\\\">\\n              <ion-select-option value=\\\"\\\">All Types</ion-select-option>\\n              <ion-select-option *ngFor=\\\"let type of tenureTypes\\\" [value]=\\\"type\\\">{{ type }}</ion-select-option>\\n            </ion-select>            \\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <!-- Tenure type filter buttons -->\\n          <ion-button (click)=\\\"setTenureType('99 Years')\\\">99 Years</ion-button>\\n          <ion-button (click)=\\\"setTenureType('60 Years')\\\">60 Years</ion-button>\\n          <ion-button (click)=\\\"setTenureType('Freehold')\\\">Freehold / 999 Years</ion-button>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item>\\n            <ion-label>Filter</ion-label>\\n            <ion-toggle [(ngModel)]=\\\"filter\\\" (ionChange)=\\\"handleFilterYes()\\\"></ion-toggle>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      \\n  \\n      <!-- New row for displaying filtered results -->\\n      <ion-row *ngIf=\\\"allFiltersFilled()\\\">\\n        <ion-col>\\n          <ion-list>\\n            <!-- Iterate over filteredFBPostals to display each postal -->\\n            <ion-item *ngFor=\\\"let postal of filteredFBPostals\\\" [routerLink]=\\\"['/', 'units', postal.postal]\\\">\\n              <ion-thumbnail slot=\\\"start\\\">\\n                <ion-img [src]=\\\"postal.imageUrl || 'assets/placeholders/property.jpeg'\\\"></ion-img>\\n              </ion-thumbnail>\\n              <ion-label *ngIf=\\\"postal.name !== undefined\\\">\\n                <h2>{{ postal.name }}</h2>\\n                <p>Singapore {{ postal.postal }}</p>\\n                <p>Asking Price: {{ postal.askingPrice }}</p>\\n                <p>District: {{ postal.district }}</p> <!-- Use the actual properties of your fbPostal object -->\\n              </ion-label>\\n            </ion-item>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n\\n            <!-- New row for displaying the number of results -->\\n      <ion-row *ngIf=\\\"allFiltersFilled()\\\" class=\\\"result-count-row\\\">\\n        <ion-col>\\n          <ion-item lines=\\\"none\\\" class=\\\"result-count-item\\\">\\n            <ion-label>Total Results: {{ filteredFBPostals.length }}</ion-label>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n  \\n      <ion-row>\\n        <ion-col>\\n          <ion-list *ngIf=\\\"result\\\">\\n            <ion-item class=\\\"custom-color\\\">\\n              Similar Places:\\n            </ion-item>\\n            \\n            <div *ngIf=\\\"findRecs.length == 0\\\">\\n              <ion-item>\\n                Currently Unavailable\\n              </ion-item>\\n            </div>\\n            \\n            <div *ngIf=\\\"findRecs.length != 0\\\">\\n              <ion-item *ngFor=\\\"let recPlace of findRecs\\\">\\n                {{recPlace}}\\n              </ion-item>\\n            </div>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-content>\\n  \\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BuyerPage } from './buyer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BuyerPage,\n  },\n  {\n    path: ':postalId',\n    loadChildren: () => import('../units/block-detail/block-detail.module').then( m => m.BlockDetailPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\n\nexport class BuyerPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { BuyerPageRoutingModule } from '../buyer/buyer-routing.module';\nimport { BuyerPage } from '../buyer/buyer.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BuyerPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [BuyerPage]\n})\n\nexport class BuyerPageModule {}\n","export default \".custom-color {\\n  --color: #7f7f7f;\\n}\\n\\n/* Style the result count item */\\n\\n.result-count-item {\\n  font-size: 18px;\\n  font-weight: bold;\\n  color: #333;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sYXJhaG9yL0RvY3VtZW50cy9HaXRIdWIvRllQLVJlY29tbWVuZGVyLVN5c3RlbS9wcm9wbmV4LWludmVzdG1lbnQtc3VpdGUvc3JjL2FwcC9wYWdlcy9idXllci9idXllci5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2J1eWVyL2J1eWVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0FDQ0o7O0FERUEsZ0NBQUE7O0FBQ0E7RUFFSSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9idXllci9idXllci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3VzdG9tLWNvbG9yIHtcbiAgICAtLWNvbG9yOiAjN2Y3ZjdmOyBcbn1cblxuLyogU3R5bGUgdGhlIHJlc3VsdCBjb3VudCBpdGVtICovXG4ucmVzdWx0LWNvdW50LWl0ZW0ge1xuICAgIC8vIEFkZCB5b3VyIGN1c3RvbSBzdHlsZXMgaGVyZVxuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjogIzMzMztcbiAgfVxuICAiLCIuY3VzdG9tLWNvbG9yIHtcbiAgLS1jb2xvcjogIzdmN2Y3Zjtcbn1cblxuLyogU3R5bGUgdGhlIHJlc3VsdCBjb3VudCBpdGVtICovXG4ucmVzdWx0LWNvdW50LWl0ZW0ge1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzMzMztcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\nimport { fbPostal, fbRec, fbUser } from '../auth/firebase.model';\nimport { AddBlockComponent } from '../units/add-block/add-block.component';\nimport { PlaceService } from '../../services/place.service';\nimport { EditProfileComponent } from '../home/main/edit-profile/edit-profile.component';\nimport { FilterService } from '../../pages/filter.service'; // Import the FilterService\nimport { SelectedHotelsService } from '../../services/TrackHotel.service'; // Replace with the correct path\n\nexport const accommodationTypes = [\n    'Residential',\n    \"Backpackers Hotel\",\n    'Hotel',\n    \"Students Hotel\",\n    'Serviced Apartment',\n    \"Workers Dormitories\"\n  ]; //accommodation types\n\nexport const tenureTypes = [\n    '99 Years',\n    '60 Years',\n    'Freehold'\n]; //tenure types\n\nexport const regionTypes = [\n  'RCR',\n  'CCR',\n  'OCR'\n];  \n\nexport const regionDistrictMapping = {\n  'RCR': [\n    'District 01 - Raffles Place, Marina, Cecil', 'District 02 - Tanjong Pagar, Chinatown',\n    'District 03 - Tiong Bahru, Alexandra, Queenstown', 'District 04 - Mount Faber, Telok Blangah, Harbourfront',\n    'District 06 - Clarke Quay, City Hall', 'District 16 - Bedok, Upper East Coast, Siglap',\n    'District 17 - Changi, Flora, Loyang', 'District 18 - Tampines, Pasir Ris',\n    'District 19 - Punggol, Sengkang, Serangoon Gardens', 'District 21 - Upper Bukit Timah, Ulu Pandan, Clementi Park',\n    'District 22 - Boon Lay, Jurong, Tuas', 'District 23 - Choa Chu Kang, Diary Farm, Hillview, Bukit Panjang, Bukit Batok',\n    'District 24 - Kranji, Lim Chu Kang, Tengah', 'District 25 - Woodlands, Admiralty',\n    'District 26 - Upper Thomson, Mandai', 'District 27 - Sembawang, Yishun, Admiralty',\n    'District 28 - Yio Chu Kang, Seletar',\n  ],\n  'CCR': [\n    'District 09 - Orchard Road, River Valley', 'District 10 - Bukit Timah, Holland, Balmoral',\n    'District 11 - Novena, Newton, Thomson',\n  ],\n  'OCR': [\n    'District 05 - Buona Vista, Pasir Panjang, Clementi', 'District 14 - Geylang, Paya Lebar, Sims',\n    'District 15 - Joo Chiat, Marina Parade, Katong', 'District 20 - Ang Mo Kio, Bishan, Thomson',\n  ],\n};\n\nexport const districtTypes = [ \n    \"District 01 - Raffles Place, Marina, Cecil\",\n    'District 02 - Tanjong Pagar, Chinatown',\n    'District 03 - Tiong Bahru, Alexandra, Queenstown',\n    'District 04 - Mount Faber, Telok Blangah, Harbourfront',\n    'District 05 - Buona Vista, Pasir Panjang, Clementi',\n    'District 06 - Clarke Quay, City Hall',\n    'District 07 - Bugis, Beach Road, Golden Mile',\n    'District 08 - Little India, Farrer Park',\n    'District 09 - Orchard Road, River Valley',\n    'District 10 - Bukit Timah, Holland, Balmoral',\n    'District 11 - Novena, Newton, Thomson',\n    'District 12 - Toa Payoh, Serangoon, Balestier',\n    'District 13 - Macpherson, Braddell',\n    'District 14 - Geylang, Paya Lebar, Sims',\n    'District 15 - Joo Chiat, Marina Parade, Katong',\n    'District 16 - Bedok, Upper East Coast, Siglap',\n    'District 17 - Changi, Flora, Loyang',\n    'District 18 - Tampines, Pasir Ris',\n    'District 19 - Punggol, Sengkang, Serangoon Gardens',\n    'District 20 - Ang Mo Kio, Bishan, Thomson',\n    'District 21 - Upper Bukit Timah, Ulu Pandan, Clementi Park',\n    'District 22 - Boon Lay, Jurong, Tuas',\n    'District 23 - Choa Chu Kang, Diary Farm, Hillview, Bukit Panjang, Bukit Batok',\n    'District 24 - Kranji, Lim Chu Kang, Tengah',\n    'District 25 - Woodlands, Admiralty',\n    'District 26 - Upper Thomson, Mandai',\n    'District 27 - Sembawang, Yishun, Admiralty',\n    'District 28 - Yio Chu Kang, Seletar'\n  ];\n\n@Component({\n  selector: 'app-buyer',\n  templateUrl: './buyer.page.html',\n  styleUrls: ['./buyer.page.scss'],\n})\n\nexport class BuyerPage implements OnInit {\n\n  currUser: fbUser;\n  loadedFBPostals: fbPostal[];\n  private fbPostalsSub: Subscription;\n  result: fbPostal[];\n  loadedFBRecs: fbRec[];\n  filteredresult: fbPostal[];\n  private fbRecsSub: Subscription;\n  recItem: fbRec;\n  findRecs: string[];\n  minPrice: number = 0;\n  maxPrice: number = (100/0);\n  minRooms: number = 0;\n  maxRooms: number = (100/0);\n  filter: boolean;\n  approvedUsage: string;\n  accommodationTypes = accommodationTypes;\n  tenureTypes = tenureTypes;\n  districtTypes =   districtTypes;\n  selectedAccommodationType: string[] = []; //initially no filter\n  selectedDistrict: any[] = [];\n  selectedTenure: any[] = []; //initially no filter\n  filteredFBPostals: fbPostal[]; //hold filtered results\n  regionTypes = regionTypes;\n  selectedRegions: string[] = [];\n  selectedBudgetRanges: { min: number, max: number }[] = [];\n  selectedDistricts: string[] = [];\n  availableDistricts: string[] = [];\n\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private modalCtrl: ModalController,\n    private filterService: FilterService, \n    private placeService: PlaceService,\n    private selectedHotelsService: SelectedHotelsService\n  ) { }\n\n\n  ngOnInit() {\n    this.currUser = this.authService.currFbUser;\n\n    this.fbPostalsSub = this.placeService.fbPostals.subscribe(fbPostals => {\n      this.loadedFBPostals = fbPostals;\n    })\n\n    this.fbRecsSub = this.placeService.fbRecs.subscribe(fbRecs => {\n      this.loadedFBRecs = fbRecs;\n    })\n  }\n\n  ionViewWillEnter() {\n    this.placeService.fetchFBPostals().subscribe(() => {\n\n    });\n\n    this.placeService.fetchFBRecs().subscribe(() => {\n\n    });\n\n  }\n \n  handleAccommodationTypeChange(selectedType: string[]) {\n    this.selectedAccommodationType = selectedType;\n    this.filterPostals();\n  }\n  \n  handleLDistrictChange(selectedTypes: string[]) {\n    this.selectedDistrict = selectedTypes;\n    this.filterPostals();\n  }\n\n  handleRegionChange(selectedRegion: string) {\n    if (this.selectedRegions.includes(selectedRegion)) {\n      // Remove the region if it's already selected\n      this.selectedRegions = this.selectedRegions.filter((r) => r !== selectedRegion);\n    } else {\n      // Add the region if it's not selected\n      this.selectedRegions.push(selectedRegion);\n    }\n  \n    // Update the selectedDistricts based on all selected regions\n    this.selectedDistricts = this.getSelectedDistricts();\n  \n    this.filterPostals();\n  }\n\n  getSelectedDistricts(): string[] {\n    const districts: string[] = [];\n    for (const region of this.selectedRegions) {\n      districts.push(...(regionDistrictMapping[region] || []));\n    }\n    return districts;\n  }\n  \n  getDistrictsForRegion(region: string): string[] {\n    return regionDistrictMapping[region] || [];\n  }\n  \n  handleDistrictChange() {\n    this.filterPostals();\n  }\n\n  \n\n  handlePriceChange() {\n    this.filterPostals();\n  }\n\n  handleRoomchange() {\n    this.filterPostals();\n  }\n\n  handleTenureChange(selectedType: string[]) {\n    this.selectedTenure = selectedType;\n    this.filterPostals();\n  }\n\n  handleFilterYes() {\n    if (this.filter) {\n      \n    } else {\n      // Set additionalFilter to false when the toggle is switched off\n      this.filter = false;\n    }\n  }\n\n  toggleBudgetRange(range: { min: number, max: number }) {\n    const index = this.selectedBudgetRanges.findIndex(r => r.min === range.min && r.max === range.max);\n  \n    if (index !== -1) {\n      // Range is already selected, remove it\n      this.selectedBudgetRanges.splice(index, 1);\n    } else {\n      // Range is not selected, add it\n      this.selectedBudgetRanges.push(range);\n    }\n  \n    this.filterPostals();\n  }\n  \n  isBudgetRangeSelected(range: { min: number, max: number }): boolean {\n    return this.selectedBudgetRanges.some(r => r.min === range.min && r.max === range.max);\n  }\n\n  getSelectedBudgetRanges(): string {\n    return this.selectedBudgetRanges.map(range => `${range.min}-${range.max}`).join(', ');\n  }\n\n  setRoomRange(minValue: number, maxValue: number) {\n    this.minRooms = minValue;\n    this.maxRooms = maxValue;\n    this.filterPostals();\n  }\n\n  toggleAccommodationType(type: string) {\n    const index = this.selectedAccommodationType.indexOf(type);\n  \n    if (index !== -1) {\n      // Type is already in the array, remove it\n      this.selectedAccommodationType.splice(index, 1);\n    } else {\n      // Type is not in the array, add it\n      this.selectedAccommodationType.push(type);\n    }\n  \n    console.log(this.selectedAccommodationType); // Log the array to check its contents\n    this.filterPostals();\n  }\n  \n  setAccommodationType(type: string[]) {\n    this.selectedAccommodationType = type;\n    this.filterPostals();\n  }\n  \n  \n\n  setTenureType(type: string) {\n    this.selectedTenure = [type]; // Convert to an array to match the expected format\n    this.filterPostals();\n  }\n\n  allFiltersFilled(): boolean {\n    return (\n      this.filter === true\n      // Add more conditions if you have additional filters\n    );\n  }\n  \n  filterPostals() {\n\n    this.filterService.setFilters({\n      selectedAccommodationType: this.selectedAccommodationType,\n      selectedDistrict: this.selectedDistrict,\n      minPrice: this.minPrice,\n      maxPrice: this.maxPrice,\n      minRooms: this.minRooms,\n      maxRooms: this.maxRooms,\n      username: this.currUser.name,\n      tenure: this.selectedTenure\n      // Add other filters as needed\n    });\n\n    this.filteredFBPostals = this.loadedFBPostals.filter(postal =>\n      (!this.selectedAccommodationType || this.selectedAccommodationType.includes(postal.approvedUsage)) &&\n      (!this.selectedDistrict || this.selectedDistrict.includes(postal.district)) &&\n      this.checkPriceInRange(postal.askingPrice) &&\n      (!this.minRooms || postal.numRooms >= this.minRooms) &&\n      (!this.maxRooms || postal.numRooms <= this.maxRooms) &&\n      (!this.selectedTenure || this.selectedTenure.includes(postal.tenure))\n      // Add more conditions as needed\n    );\n    return this.filteredFBPostals;\n  }\n  \n  isSelectedRegion(postalRegion: string): boolean {\n    return (\n      !this.selectedRegions.length ||\n      this.selectedRegions.includes(postalRegion)\n    );\n  }\n  \n  \n  checkPriceInRange(price: number): boolean {\n    if (this.selectedBudgetRanges.length > 0) {\n      return this.selectedBudgetRanges.some(range =>\n        price >= range.min && price <= range.max\n      );\n    } else {\n      return (!this.minPrice || price >= this.minPrice) && (!this.maxPrice || price <= this.maxPrice);\n    }\n  }\n  \n  onSelectPlace(postal: fbPostal) {\n    this.router.navigate(['/', 'units', postal.postal]);\n    this.selectedHotelsService.addSelectedHotel(postal);\n  }\n\n  // navigate to edit user profile form\n  onEditProfile() {\n    this.modalCtrl\n      .create({ component: EditProfileComponent })\n      .then(modalEl => {\n        modalEl.present();\n        return modalEl.onDidDismiss();\n      })\n      .then(resultData => {\n        if (resultData.role === 'confirm') {\n          this.ionViewWillEnter();\n        }\n      });\n  }\n\n\n  // add new place\n  onAddBlock() {\n    this.modalCtrl\n      .create({ component: AddBlockComponent })\n      .then(modalEl => {\n        modalEl.present();\n        return modalEl.onDidDismiss();\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.fbPostalsSub) {\n      this.fbPostalsSub.unsubscribe();\n    }\n    if (this.fbRecsSub) {\n      this.fbRecsSub.unsubscribe();\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { fbPostal, fbRec, fbUnit } from '../pages/auth/firebase.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectedHotelsService {\n  private selectedHotelsSubject = new BehaviorSubject<fbPostal[]>([]);\n  selectedHotels$ = this.selectedHotelsSubject.asObservable();\n\n  addSelectedHotel(hotel: fbPostal) {\n    const currentSelectedHotels = this.selectedHotelsSubject.value;\n    this.selectedHotelsSubject.next([...currentSelectedHotels, hotel]);\n  }\n\n  getSelectedHotels(): fbPostal[] {\n    return this.selectedHotelsSubject.value;\n  }\n\n  saveSelectedHotelsToFirebase(userId: string) {\n    const selectedHotels = this.selectedHotelsSubject.value;\n  }\n}\n"],"sourceRoot":"webpack:///"}